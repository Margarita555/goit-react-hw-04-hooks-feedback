{"version":3,"sources":["components/Statistics/Statistics.module.css","components/Section/Section.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Notification/Notification.module.css","components/Section/Section.jsx","components/Statistics/Statistics.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Notification/Notification.jsx","components/App/App.jsx","index.js"],"names":["module","exports","Section","title","children","className","s","section","Statistics","statistics","total","positivePercentage","list","map","key","value","item","FeedbackOptions","onLeaveFeedback","options","label","button","onClick","type","Notification","message","notification","initialState","good","neutral","bad","App","useReducer","state","feedbackType","Error","dispatch","countTotalFeedback","Object","values","reduce","acc","entries","keys","Math","round","countPositiveFeedbackPercentage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0IACAA,EAAOC,QAAU,CAAC,MAAQ,0BAA0B,KAAO,yBAAyB,MAAQ,4B,oBCA5FD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,yB,iBCA7DD,EAAOC,QAAU,CAAC,OAAS,kC,gBCA3BD,EAAOC,QAAU,CAAC,aAAe,qC,oICelBC,EAbC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,sBAAKC,UAAWC,IAAEC,QAAlB,UACE,oBAAIF,UAAWC,IAAEH,MAAjB,SAAyBA,IACxBC,M,gBCuBQI,EA3BI,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,WAAYC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBACvC,OACE,sBAAKN,UAAWC,IAAEG,WAAlB,UACE,oBAAIJ,UAAWC,IAAEH,MAAjB,wBACA,qBAAIE,UAAWC,IAAEM,KAAjB,UACGH,EAAWI,KAAI,mCAAEC,EAAF,KAAOC,EAAP,YACd,qBAAIV,UAAWC,IAAEU,KAAjB,UACGF,EADH,IACQ,sBAAMT,UAAWC,IAAES,MAAnB,SAA2BA,MADPD,MAI9B,qBAAIT,UAAWC,IAAEU,KAAjB,mBACQ,sBAAMX,UAAWC,IAAES,MAAnB,SAA2BL,OAEnC,qBAAIL,UAAWC,IAAEU,KAAjB,+BAEE,sBAAMX,UAAWC,IAAES,MAAnB,SAA2BJ,EAAqB,gB,gBCO3CM,EAtBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,gBAAiBC,EAAc,EAAdA,QAC1C,OACE,8BACGA,EAAQN,KAAI,SAAAO,GAAK,OAChB,wBAEEf,UAAWC,IAAEe,OACbC,QAAS,WACPJ,EAAgBE,IAElBG,KAAK,SANP,SAQGH,GAPIA,S,gBCGAI,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,qBAAKpB,UAAWC,IAAEoB,aAAlB,SAAiCD,KCEpCE,EAAe,CACnBC,KAAM,EACNC,QAAS,EACTC,IAAK,GAmDQC,MAhDf,WACE,MAA0BC,sBAE1B,SAAsBC,EAAOC,GAC3B,OAAQA,GACN,IAAK,OACH,OAAO,2BAAKD,GAAZ,IAAmBL,KAAMK,EAAML,KAAO,IACxC,IAAK,UACH,OAAO,2BAAKK,GAAZ,IAAmBJ,QAASI,EAAMJ,QAAU,IAC9C,IAAK,MACH,OAAO,2BAAKI,GAAZ,IAAmBH,IAAKG,EAAMH,IAAM,IACtC,QACE,MAAM,IAAIK,MAAM,gCAX6BR,GAAnD,mBAAOM,EAAP,KAAcG,EAAd,KAeMC,EAAqB,WACzB,OAAOC,OAAOC,OAAON,GAAOO,QAAO,SAACC,EAAK1B,GAAN,OAAgB0B,EAAM1B,IAAO,IAW5DL,EAAQ2B,IACR5B,EAAa6B,OAAOI,QAAQT,GAC5Bd,EAAUmB,OAAOK,KAAKV,GAC5B,OACE,qBAAK5B,UAAU,MAAf,SACE,eAAC,EAAD,CAASF,MAAM,wBAAf,UACE,cAAC,EAAD,CAAiBgB,QAASA,EAASD,gBAAiBkB,IACnD1B,EAAQ,GACP,cAAC,EAAD,CACED,WAAYA,EACZC,MAAOA,EACPC,mBAnB8B,WACtC,IAAMD,EAAQ2B,IACd,GAAI3B,EAEF,OADmCkC,KAAKC,MAAoB,IAAbZ,EAAML,KAAclB,GAgBzCoC,MAGtBpC,GAAS,cAAC,EAAD,CAAce,QAAQ,4B,MChDzCsB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.be311b81.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Statistics_title__3mxEI\",\"item\":\"Statistics_item__358QC\",\"value\":\"Statistics_value__1dwgq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3ob73\",\"title\":\"Section_title__26TBh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__3RRiT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__2t4as\"};","import PropTypes from 'prop-types';\r\nimport s from './Section.module.css';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <div className={s.section}>\r\n      <h1 className={s.title}>{title}</h1>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import PropTypes from 'prop-types';\r\nimport s from './Statistics.module.css';\r\n\r\nconst Statistics = ({ statistics, total, positivePercentage }) => {\r\n  return (\r\n    <div className={s.statistics}>\r\n      <h2 className={s.title}>Statistics</h2>\r\n      <ul className={s.list}>\r\n        {statistics.map(([key, value]) => (\r\n          <li className={s.item} key={key}>\r\n            {key}:<span className={s.value}>{value}</span>\r\n          </li>\r\n        ))}\r\n        <li className={s.item}>\r\n          Total:<span className={s.value}>{total}</span>\r\n        </li>\r\n        <li className={s.item}>\r\n          Positive feedback:\r\n          <span className={s.value}>{positivePercentage + '%'}</span>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import PropTypes from 'prop-types';\r\nimport s from './FeedbackOptions.module.css';\r\n\r\nconst FeedbackOptions = ({ onLeaveFeedback, options }) => {\r\n  return (\r\n    <div>\r\n      {options.map(label => (\r\n        <button\r\n          key={label}\r\n          className={s.button}\r\n          onClick={() => {\r\n            onLeaveFeedback(label);\r\n          }}\r\n          type=\"button\"\r\n        >\r\n          {label}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.array.isRequired,\r\n};\r\nexport default FeedbackOptions;\r\n","import PropTypes from 'prop-types';\r\nimport s from './Notification.module.css';\r\n\r\nconst Notification = ({ message }) => {\r\n  return <div className={s.notification}>{message}</div>;\r\n};\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import { useReducer } from 'react';\nimport Section from '../Section/Section';\nimport Statistics from '../Statistics/Statistics';\nimport FeedbackOptions from '../FeedbackOptions/FeedbackOptions';\nimport Notification from '../Notification/Notification';\n\nconst initialState = {\n  good: 0,\n  neutral: 0,\n  bad: 0,\n};\n\nfunction App() {\n  const [state, dispatch] = useReducer(countReducer, initialState);\n\n  function countReducer(state, feedbackType) {\n    switch (feedbackType) {\n      case 'good':\n        return { ...state, good: state.good + 1 };\n      case 'neutral':\n        return { ...state, neutral: state.neutral + 1 };\n      case 'bad':\n        return { ...state, bad: state.bad + 1 };\n      default:\n        throw new Error('Unsupported feedback type');\n    }\n  }\n\n  const countTotalFeedback = () => {\n    return Object.values(state).reduce((acc, value) => acc + value, 0);\n  };\n\n  const countPositiveFeedbackPercentage = () => {\n    const total = countTotalFeedback();\n    if (total) {\n      const positiveFeedbackPercentage = Math.round((state.good * 100) / total);\n      return positiveFeedbackPercentage;\n    }\n  };\n\n  const total = countTotalFeedback();\n  const statistics = Object.entries(state);\n  const options = Object.keys(state);\n  return (\n    <div className=\"app\">\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions options={options} onLeaveFeedback={dispatch} />\n        {total > 0 && (\n          <Statistics\n            statistics={statistics}\n            total={total}\n            positivePercentage={countPositiveFeedbackPercentage()}\n          />\n        )}\n        {!total && <Notification message=\"No feedback given\" />}\n      </Section>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport './index.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}